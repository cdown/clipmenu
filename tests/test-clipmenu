#!/usr/bin/env bash

set -x
set -e
set -o pipefail

# shellcheck disable=SC1091
source "${BASH_SOURCE[0]%/*}/setup.sh"

temp="${tempdir?}/out"

cleanup_pre() {
    if [[ -n "${temp:-}" ]] && [[ -f "$temp" ]]; then
        cat "$temp"
    fi
}

rm -rf "${dir?}"
mkdir -p "$dir"

cat > "${cache_file?}" << 'EOF'
1234 Selected text. (2 lines)
1235 Selected text 2. (2 lines)
EOF

cat > "$dir/$(cksum <<< 'Selected text. (2 lines)')" << 'EOF'
Selected text.
Yes, it's selected text.
EOF

### TESTS ###

clipmenu --foo bar > "$temp" 2>&1

# Arguments are transparently passed to dmenu
grep -Fxq 'dmenu args: -l 8 --foo bar' "$temp"

# Output from cache file should get to dmenu, reversed
grep -Fxq 'dmenu line 1 stdin: Selected text 2. (2 lines)' "$temp"
grep -Fxq 'dmenu line 2 stdin: Selected text. (2 lines)' "$temp"

# xsel should copy both to clipboard *and* primary
grep -Fxq 'xsel args: --logfile /dev/null -i --clipboard' "$temp"
grep -Fxq 'xsel args: --logfile /dev/null -i --primary' "$temp"

grep -Fxq 'xsel line 1 stdin: Selected text.' "$temp"
grep -Fxq "xsel line 2 stdin: Yes, it's selected text." "$temp"

CM_LAUNCHER="${toplevel?}/tests/fixtures/bin/rofi" clipmenu --foo bar > "$temp" 2>&1

# We have a special case to add -dmenu for rofi
grep -Fxq 'rofi args: -dmenu -p clipmenu -l 8 --foo bar' "$temp"

# clipmenu should issue a warning message if the user specified an unrecognized
# CM_LAUNCHER_TYPE value
unrecognized_launcher_type="foobar-${RANDOM}"
CM_LAUNCHER="/not/really/a/launcher-${RANDOM}" \
    CM_LAUNCHER_TYPE="$unrecognized_launcher_type" \
    clipmenu --foo bar > "$temp" 2>&1 || :

grep -Fxq "Unrecognized CM_LAUNCHER_TYPE '${unrecognized_launcher_type}'; assuming 'dmenu'-type launcher." "$temp"

# clipmenu should *not* issue a warning message if the user specified a
# CM_LAUNCHER value whose basename is not a recognized CM_LAUNCHER_TYPE value
CM_LAUNCHER="/not/really/a/launcher-${RANDOM}" \
    clipmenu --foo bar > "$temp" 2>&1 || :

if grep -xq "Unrecognized CM_LAUNCHER_TYPE '[^']*'; assuming 'dmenu'-type launcher." "$temp"; then
    exit 1
fi

# clipmenu should (by default) treat the path to an executable whose basename
# is `rofi-script` as a dmenu-compatible launcher.
CM_LAUNCHER="${toplevel?}/tests/fixtures/bin/rofi-script" \
    clipmenu --foo bar > "$temp" 2>&1 || :

grep -Fxq "rofi-script args: -l 8 --foo bar" "$temp"
