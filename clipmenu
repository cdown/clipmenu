#!/usr/bin/env bash

: "${CM_DIR="${XDG_RUNTIME_DIR-"${TMPDIR-/tmp}"}"}"
# Pick dmenu or rofi, depending on what's available on the system
if [[ -z "$CM_LAUNCHER" ]]; then
  if command -v dmenu >/dev/null 2>&1; then
    CM_LAUNCHER=dmenu
  elif command -v rofi >/dev/null 2>&1; then
    CM_LAUNCHER=rofi
  else
    echo "Neither dmenu(1) nor rofi(1) were found." >&2
    exit 5
  fi
fi

major_version=5

shopt -s nullglob

cache_dir=$CM_DIR/clipmenu.$major_version.$USER
cache_file_prefix=$cache_dir/line_cache

if [[ $1 == --help ]] || [[ $1 == -h ]]; then
    cat << 'EOF'
clipmenu is a simple clipboard manager using dmenu and xsel. Launch this
when you want to select a clip.

All arguments are passed through to dmenu itself.

Environment variables:

- $CM_LAUNCHER: specify a dmenu-compatible launcher (default: dmenu)
- $CM_DIR: specify the base directory to store the cache dir in (default: $XDG_RUNTIME_DIR, $TMPDIR, or /tmp)
EOF
    exit 0
fi

if [[ "$CM_LAUNCHER" == rofi ]]; then
    # rofi supports dmenu-like arguments through the -dmenu flag
    set -- -dmenu "$@"
fi

list_clips() {
    cat "$cache_file_prefix"_* /dev/null | LC_ALL=C sort -rnk 1 | cut -d' ' -f2- | awk '!seen[$0]++'
}

if [[ "$CM_LAUNCHER" == rofi-script ]]; then
    if ! (( $# )); then
        list_clips
        exit
    else
        # https://github.com/koalaman/shellcheck/issues/1141
        # shellcheck disable=SC2124
        chosen_line="${@: -1}"
    fi
else
    # It's okay to hardcode `-l 8` here as a sensible default without checking
    # whether `-l` is also in "$@", because the way that dmenu works allows a later
    # argument to override an earlier one. That is, if the user passes in `-l`, our
    # one will be ignored.
    chosen_line=$(
        list_clips | "$CM_LAUNCHER" -l 8 "$@"
    )
fi

[[ $chosen_line ]] || exit 1

file=$cache_dir/$(cksum <<< "$chosen_line")

if ! [[ -f "$file" ]]; then
    # We didn't find this in cache
    printf 'FATAL: %s not in cache (%s missing)\n' "$chosen_line" "$file" >&2
    printf 'Please report the following debug information:\n\n' >&2
    wc -l "$cache_file_prefix"_* >&2
    grep -nFR "$chosen_line" "$cache_dir" >&2
    stat "$file" >&2
    exit 2
fi

for selection in clipboard primary; do
    xsel --logfile /dev/null -i --"$selection" < "$file"
done
